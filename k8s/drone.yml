kind: pipeline
type: docker
name: echo

clone:
  depth: 1

# 注意修改OS&arch
platform:
  os: linux
  arch: amd64

# 不需要就注释掉
# services:
#   - name: etcd
#     image: bitnami/etcd
#     environment:
#       ALLOW_NONE_AUTHENTICATION: yes
#   - name: redis
#     image: bitnami/redis
#     environment:
#       ALLOW_EMPTY_PASSWORD: yes
#   - name: consul
#     image: bitnami/consul
#   - name: zookeeper
#     image: bitnami/zookeeper
#     environment:
#       ALLOW_ANONYMOUS_LOGIN: yes

steps:
  - name: helloworld
    pull: if-not-exists
    image: hello-world

  - name: linter
    image: golang:latest
    pull: if-not-exists
    environment:
      GO111MODULE: "on"
      GOPROXY: "https://goproxy.cn,direct"
      GOSUMDB: "off"
      CGO_ENABLED: "0"
      GOOS: "linux"
    volumes:
      - name: pkgdeps
        path: /go/pkg
    commands:
      - go get github.com/golangci/golangci-lint/cmd/golangci-lint@latest
      - golangci-lint run --fix

  - name: test
    image: golang:latest
    pull: if-not-exists
    environment:
      GO111MODULE: "on"
      GOPROXY: "https://goproxy.cn,direct"
      GOSUMDB: "off"
      CGO_ENABLED: "0"
      GOOS: "linux"
    depends_on:
      - helloworld
    volumes:
      - name: pkgdeps
        path: /go/pkg
    commands:
      - go test ./...
      - go test -race -coverprofile=coverage.txt -covermode=atomic

  #   - name: test
  #     image: golang:1.15
  #     environment:
  #       ETCD_ENDPOINTS: "etcd:2379"
  #       REDIS_ADDR: "redis:6379"
  #       CONSUL_ADDR: "consul:8500"
  #       ZOOKEEPER_ENDPOINTS: "zookeeper"
  #     commands:
  #       - go test -race -v -coverprofile=coverage.txt -covermode=atomic ./...

  - name: coverage
    image: plugins/codecov
    settings:
      token:
        from_secret: codecov-token
      files:
        - coverage.txt

  - name: build
    image: golang:latest
    pull: if-not-exists
    environment:
      GO111MODULE: "on"
      GOPROXY: "https://goproxy.cn,direct"
      GOSUMDB: "off"
      CGO_ENABLED: "0"
      GOOS: "linux"
    depends_on:
      - helloworld
    volumes:
      - name: pkgdeps
        path: /go/pkg
    commands:
      - go build
