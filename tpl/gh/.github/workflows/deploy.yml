name: Push Docker image Docker Hub And Deploy
on:
  push:
    tags: [v*]
    branches: [main]
  pull_request:
    branches: [main]
permissions:
  contents: read

jobs:
  server:
    name: push server image to ACR
    strategy:
      matrix:
        go-version: [1.17x, 1.18.x]
        os: [ubuntu-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Set up Go
        uses: actions/setup-go@v1
        with:
          go-version: ${{ matrix.go-version }}
      - name: checkout code
        uses: actions/checkout@v2
      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: hapihacking
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Login to ACR
        uses: aliyun/acr-login@v1
        with:
          login-server: https://registry.cn-hangzhou.aliyuncs.com
          username: "${{ secrets.ACR_USERNAME }}"
          password: "${{ secrets.ACR_PASSWORD }}"
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          context: .
          file: server/Dockerfile
          push: true
          tags: ï½œ
            hapihacking/mali-server:latest  # TODO
            hapihacking/mali-server:${{ github.event.inputs.tags }}

#      - name: push to ghcr.io
#        uses: docker/build-push-action@v1
#        with:
#          username: ${{ github.actor }}
#          password: ${{ secrets.GITHUB_TOKEN }}
#          registry: ghcr.io
#          repository: mingcheng/obsync
#          tag_with_ref: true
  web:
    name: push web image to ACR
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [ 18.6.0 ]
    steps:
      - name: Check out branch
        uses: actions/checkout@v2
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}
      - name: Build
        run: |
          npm install
          npm run build
        working-directory: ./web
      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: luckyhacking
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Login to ACR
        uses: aliyun/acr-login@v1
        with:
          login-server: https://registry.cn-hangzhou.aliyuncs.com
          username: "${{ secrets.ACR_USERNAME }}"
          password: "${{ secrets.ACR_PASSWORD }}"
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          context: .
          file: web/Dockerfile
          push: true
          tags: |
            hapihacking/mali-web:latest
            hapihacking/mali-web:${{ github.event.inputs.tags }}

  cd:
    name: cd
    runs-on: ubuntu-latest
    steps:
      - name: deploy
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.REMOTE_HOST }}
          username: ${{ secrets.REMOTE_USER }}
          password: ${{ secrets.REMOTE_PWD }}
          port: 22
          timeout: 10m
          script_stop: true
          script: |
            cd ~/vps/mali && docker compose pull && docker compose stop web server && docker compose rm -f web server && docker compose up --build -d
      - name: Trigger Webhook
        run: |
          curl -X POST "${{ secrets.BETA_WEBHOOK }}backend"
    needs: [ server, web ]